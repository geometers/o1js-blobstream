
import { FpC, FrC } from "../towers/index.js";

// taken from: https://github.com/succinctlabs/sp1-contracts/blob/ratan/v1.0.5-testnet/contracts/src/PlonkVerifier.sol

type Sp1PlonkVk = {
    pub_inputs: FrC,
    domain_size: number[],
    inv_domain_size: FrC,

    g1_gen_x: FpC, 
    g1_gen_y: FpC

    omega: FrC,

    ql_x: FpC,
    ql_y: FpC,

    qr_x: FpC,
    qr_y: FpC,

    qm_x: FpC,
    qm_y: FpC,

    qo_x: FpC,
    qo_y: FpC,

    qk_x: FpC,
    qk_y: FpC,

    qs1_x: FpC,
    qs1_y: FpC,

    qs2_x: FpC,
    qs2_y: FpC,

    qs3_x: FpC,
    qs3_y: FpC,

    coset_shift: FrC,

    qcp_0_x: FpC,
    qcp_0_y: FpC,

    index_commit_api_0: FrC,
    num_custom_gates: FrC


    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS
    omega_pow_i: FrC, 
    omega_pow_i_div_n: FrC
}

const VK: Sp1PlonkVk = {
    pub_inputs: FrC.from(2n),
    domain_size: [1].concat(Array(25).fill(0)), // 33554432 = 2^25,
    inv_domain_size: FrC.from(21888242219518804655518433051623070663413851959604507555939307129453691614729n),

    g1_gen_x: FpC.from(14312776538779914388377568895031746459131577658076416373430523308756343304251n),
    g1_gen_y: FpC.from(11763105256161367503191792604679297387056316997144156930871823008787082098465n),

    omega: FrC.from(19200870435978225707111062059747084165650991997241425080699860725083300967194n),

    ql_x: FpC.from(20791018202796501791851109643831626010857592750396866610160202525341548104975n),
    ql_y: FpC.from(5226061715293647066826628267680220853478003875325565109026897987462899458934n),

    qr_x: FpC.from(17704828802915832559088923039609398221401810694301345977639386873055299309953n),
    qr_y: FpC.from(11505746596354645523327106298502472694854757882353990600194589846954496245852n),

    qm_x: FpC.from(8632375487221918401254404349520984498817891912271126365916892067491373235811n),
    qm_y: FpC.from(18415064246668245762581392760606059429812772223698459476573964344262178019204n),

    qo_x: FpC.from(8087969089479778581426802786766605298548725543517399982902049379760156324465n),
    qo_y: FpC.from(4779090953040789618776097250791090447780600065080041765846917953077650190480n),

    qk_x: FpC.from(10309503866905785707178640727209791380348799027238603521718690548633411043468n),
    qk_y: FpC.from(2592253320469291239204015457281188297098202731734862712210951168997817663533n),

    qs1_x: FpC.from(1691236927603889293036991293307837152105169001969876410429311940723859549214n),
    qs1_y: FpC.from(14671292974808286966476340691395602210499383933767336479707207228316624796067n),

    qs2_x: FpC.from(8488985819633767661392296162379719853061350968173906335566567292000856455547n),
    qs2_y: FpC.from(21135097961399174006459419593931869224566225356178559833797507995994008138431n),

    qs3_x: FpC.from(6948983180741800379137546378229012057117410422170200269119279410455497222279n),
    qs3_y: FpC.from(2168023664758765470467815652478171461884955470414723045130810573559142201536n),

    coset_shift: FrC.from(5n),

    qcp_0_x: FpC.from(15094628898981014851230294832922767350330234022809606393203152940416977514848n),
    qcp_0_y: FpC.from(3056768420174140117719575194791127678251100292295026433168587815162498899224n),

    index_commit_api_0: FrC.from(20988588n),
    num_custom_gates: FrC.from(1n),

    // LAGRANGE FOR CUSTOM GATES PUBLIC INPUTS 
    omega_pow_i: FrC.from(16176694014061231494306471190941101162281482012067303007742827069683280275455n), 
    omega_pow_i_div_n: FrC.from(4001178343966894110671068139580076928302963568405576565842021952643468599831n)
}

export { Sp1PlonkVk, VK } 